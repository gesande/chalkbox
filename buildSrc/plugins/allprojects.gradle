import net.sf.chalkbox.build.AntBuildFileGenerator

import org.gradle.api.Task
import org.gradle.api.tasks.GradleBuild


apply from: "$buildPlugins/java-development.gradle"
apply from: "$buildPlugins/repositories.gradle"
apply from: "$buildPlugins/reporting.gradle"
apply from: "$buildPlugins/distribution-package.gradle"
apply from: "$buildPlugins/environment.gradle"
apply from: "$buildPlugins/eclipseSettings.gradle"
apply from: "$buildPlugins/svn.gradle"

task continousBuild(type: GradleBuild) { Task task ->
    group = 'Verification'
    description ='Continous build for the whole thing. Works also as a license to commit build target.'
    buildFile = 'build.gradle'
    tasks << 'clean'
    tasks << 'exportAntBuildFile'
    tasks << 'chalkbox:continous'
    tasks << 'chalkbox:dist'
    tasks << 'example:dist'
    tasks << 'aggregateTestReport'
    tasks << 'aggregateJDependReport'
    tasks << 'aggregateEmmaReport'
    tasks << 'aggregateFindbugsReport'

    doLast { println "Continous build passed, good work!" }
}

task distributionPackage(type: GradleBuild, dependsOn: ['continousBuild']) { Task task ->
    group = 'Distribution'
    description = 'Distribution package for the whole thing including continous build.'
    buildFile = 'build.gradle'

    tasks << 'chalkbox:release'
    tasks << 'example:release'
    tasks << 'archiveAggregateReports'
    tasks << 'makeDistributionPackage'

    doLast { println "Distribution package ready to be uploaded to the repository." }
}

task exportAntBuildFile() { Task task ->
    group = 'Build'
    description = 'Creates a ant build file for the project which contains the most important targets.'
    doLast {
        AntBuildFileGenerator generator = new AntBuildFileGenerator()
        generator.generate(file("buildSrc"),"chalkbox.xml", "continousBuild", "distributionPackage", "eclipseSettings", "exportAntBuildFile")
    }
}